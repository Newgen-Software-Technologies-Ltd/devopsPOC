import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;

import javax.crypto.BadPaddingException;
import javax.crypto.Cipher;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.spec.SecretKeySpec;

public class SASTVulnerability {
   public static Object deserialize(InputStream is) throws IOException, ClassNotFoundException, NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException, IllegalBlockSizeException, BadPaddingException {
    	ObjectInputStream osi = new ObjectInputStream(is);
    	SecretKeySpec key = new SecretKeySpec("password".getBytes(), "DES");
    	Cipher cipher = Cipher.getInstance("DES");
    	cipher.init(Cipher.ENCRYPT_MODE, key);
    	byte[] encrypted = cipher.doFinal("secret data".getBytes());

    	System.out.println(encrypted);
		return osi.readObject();
    	
    }
   
    
    
}
